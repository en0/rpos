@node fileno
@section @code{fileno}, @code{fileno_unlocked}---return file descriptor associated with stream
@findex fileno
@findex fileno_unlocked
@strong{Synopsis}
@example
#include <stdio.h>
int fileno(FILE *@var{fp});

#define _BSD_SOURCE
#include <stdio.h>
int fileno_unlocked(FILE *@var{fp});

@end example
@strong{Description}@*
You can use @code{fileno} to return the file descriptor identified by @var{fp}.

@code{fileno_unlocked} is a non-thread-safe version of @code{fileno}.
@code{fileno_unlocked} may only safely be used within a scope
protected by flockfile() (or ftrylockfile()) and funlockfile().  This
function may safely be used in a multi-threaded program if and only
if they are called while the invoking thread owns the (FILE *)
object, as is the case after a successful call to the flockfile() or
ftrylockfile() functions.  If threads are disabled, then
@code{fileno_unlocked} is equivalent to @code{fileno}.

@*
@strong{Returns}@*
@code{fileno} returns a non-negative integer when successful.
If @var{fp} is not an open stream, @code{fileno} returns -1.

@*
@strong{Portability}@*
@code{fileno} is not part of ANSI C.
POSIX requires @code{fileno}.

@code{fileno_unlocked} is a BSD extension also provided by GNU libc.

Supporting OS subroutines required: none.

@*
